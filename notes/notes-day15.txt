	

	<input formControlName='pasword'/>
	<div>
		{{password.errors['minLength']'.actualLength
	</div>

	let minLengthValidatorFn = Validators.minLength(6)
	'password': new FormControl('', [Validators.required, minLengthValidatorFn ])

	password.errors={ 'minLength':{ 
						actualLength:control.value.length,
						requiredLength:minlen
					} 
				}

	password.errors={required:true}
	interface ValidationErrors{ [key:string]:any}

        type ValidatorFn = (control:AbstractControl) => ValidationErrors|null

	function xValidator(control:AbstractControl):ValidationErrors|null{
	}

	function minLength(minlen:number):ValidatorFn {

		const someValidator= (control:AbstractControl):ValidationErrors|null=>{

			if(control.value.length>=minlen){
				
				return null;
			}else{
				const obj:ValidationErrors = { 
					'minLength':{ 
						actualLength:control.value.length,
						requiredLength:minlen
					} 
				}
			return obj;
			}
		}
		return someValidator;
	}



	function resize(option){
	        const l = 10
		const b = 20
		const fnResize=Function|undefined
			switch(option){

				case 1: fnResize= ()=>{ }
				break;


				case 2: fnResize=()=>{}
				break;
			}

		return fnResize;
	}

	const btnResize = resize(1)
        btnResize()

	[[Scope]]=[x,y,[l,b]]


	function logger(){
		return {

			isInterceptable:function(){
				return 
			},
			intercept:function(req,res,next){
				next()
			}
		}
		
	}

        app.use(logger())


	Parent:
	design:
	<app-c1>
		<app-c2 [name]='data'></app-c2>
	</app-c1>

	code:
	@Component({ selector:'app-c1'})
	class App1Component{
		data='joydip'
	}


	child:

	design:
	<span>{{ c2prop }}</span>
	code:
	@Component({ selector:'app-c2'})
	class App2Component{

		@Input('name') c2prop:string=''
	}





{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "cli": {
    "analytics": false
  },
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "ng-features-app": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:application": {
          "strict": true
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/ng-features-app",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.app.json",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "ng-features-app:build:production"
            },
            "development": {
              "browserTarget": "ng-features-app:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ng-features-app:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.css"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "defaultProject": "ng-features-app"
}









