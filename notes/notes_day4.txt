1. interface in TS
	a. It is an extra feature in TS. there is no corresponding representation of the same in transpiled code. Interface is simply ignored in transpiled code
	b. interface is a collection of abstract members. only declaration, but no definition
	c. data and functionalities can be declared in interface
	d. can't create object based on interface
	e. members are by default public, no access specifiers are used with them
	f. a variable of an interface can store reference of any child class object (upcasting)
	g. an interface, if implemented in a class, must implement all interface members
	h. interface is manily for typification, abstraction, loose cpupling in s/w architecture etc.
	i. interface can be inherited in another interface


1. create package.json file
2. install following packages:
	a. typescript
	b. ts-node
	c. @types/node
	
3. create scripts in the package.json file
4. create tsconfig.json file
coding:===>
5. create src folder
6. add main file: main/index.ts
7. add rest of the files
data:===>
8. create products.json file inside 'data' folder, at the root of the directory
9. if any model (class/interface repsenting the structure of data) is created, store it in src/models folder
10. if any manager type (class) is created, place the same in src/manager folder
modules:===>
11. use import/export for the module

12. can you NOT hard code the file path?
.env file


